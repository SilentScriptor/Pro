local function SafeGet(url)
    local success, response = pcall(function()
        return game:HttpGet(url)
    end)
    if success then
        return response
    else
        warn("‚ùå Failed to GET:", url, "| Error:", response)
        return nil
    end
end

local RayfieldSource = SafeGet("https://raw.githubusercontent.com/SiriusSoftwareLtd/Rayfield/main/source.lua")
if not RayfieldSource then
    error("Rayfield failed to load - check your connection or Rayfield's URL.")
end

local Rayfield = loadstring(RayfieldSource)()

local Window = Rayfield:CreateWindow({
    Name = "Pro Hub - v3",
    LoadingTitle = "Pro Hub",
    LoadingSubtitle = "by Mike",
    Theme = "Default",
    ConfigurationSaving = {
       Enabled = true,
       FileName = "ProHubConfig"
    },
})

-- Player Tab
local PlayerTab = Window:CreateTab("Player", 4483362458)

PlayerTab:CreateSlider({
    Name = "WalkSpeed",
    Range = {0, 300},
    Increment = 1,
    Suffix = "Speed",
    CurrentValue = 16,
    Flag = "WalkSpeedSlider",
    Callback = function(Value)
        game.Players.LocalPlayer.Character.Humanoid.WalkSpeed = Value
    end,
})

PlayerTab:CreateSlider({
    Name = "JumpPower",
    Range = {50, 500},
    Increment = 10,
    Suffix = "JumpPower",
    CurrentValue = 50,
    Flag = "JumpPowerSlider",
    Callback = function(Value)
        game.Players.LocalPlayer.Character.Humanoid.JumpPower = Value
    end,
})

PlayerTab:CreateToggle({
    Name = "Infinite Jump",
    CurrentValue = false,
    Flag = "InfiniteJumpToggle",
    Callback = function(Enabled)
        if Enabled then
            _G.InfiniteJump = game:GetService("UserInputService").JumpRequest:Connect(function()
                game.Players.LocalPlayer.Character:FindFirstChildOfClass("Humanoid"):ChangeState("Jumping")
            end)
        else
            if _G.InfiniteJump then
                _G.InfiniteJump:Disconnect()
                _G.InfiniteJump = nil
            end
        end
    end,
})

PlayerTab:CreateToggle({
    Name = "No Clip",
    CurrentValue = false,
    Flag = "NoClipToggle",
    Callback = function(Enabled)
        local RunService = game:GetService('RunService')
        local function noclip()
            if game.Players.LocalPlayer.Character then
                for _, v in pairs(game.Players.LocalPlayer.Character:GetDescendants()) do
                    if v:IsA('BasePart') and v.CanCollide then
                        v.CanCollide = false
                    end
                end
            end
        end

        if Enabled then
            _G.NoClipConnection = RunService.Stepped:Connect(noclip)
        else
            if _G.NoClipConnection then
                _G.NoClipConnection:Disconnect()
                _G.NoClipConnection = nil
            end
        end
    end,
})

local function ApplyESP(player)
    if player == game.Players.LocalPlayer then return end
    local highlight = Instance.new("Highlight", player.Character or player.CharacterAdded:Wait())
    highlight.Adornee = player.Character
    highlight.FillColor = Color3.fromRGB(255, 0, 0)
    highlight.FillTransparency = 0.5
    player.CharacterAdded:Connect(function(char)
        highlight.Adornee = char
    end)
end

PlayerTab:CreateToggle({
    Name = "Player ESP",
    CurrentValue = false,
    Flag = "PlayerESP",
    Callback = function(Enabled)
        if Enabled then
            for _, player in ipairs(game.Players:GetPlayers()) do
                ApplyESP(player)
            end
            game.Players.PlayerAdded:Connect(ApplyESP)
        else
            for _, player in ipairs(game.Players:GetPlayers()) do
                if player.Character then
                    for _, v in ipairs(player.Character:GetChildren()) do
                        if v:IsA("Highlight") then
                            v:Destroy()
                        end
                    end
                end
            end
        end
    end,
})

-- Script Tab
local ScriptTab = Window:CreateTab("Script", 4483362458)

local Button = ScriptTab:CreateButton({
    Name = "Infinite Yield",
    Callback = function()
       loadstring(game:HttpGet("https://raw.githubusercontent.com/EdgeIY/infiniteyield/master/source"))()
    end,
 })

 local Dropdown = ScriptTab:CreateDropdown({
    Name = "Blox Fruit",
    Options = {"Speed Hub X", "Redz Hub"},
    CurrentOption = "None",  -- set to "None" if you want nothing to run initially
    MultipleOptions = false,
    Flag = "Dropdown1",
    Callback = function(Option)
        if Option == "Speed Hub X" then
            loadstring(game:HttpGet("https://raw.githubusercontent.com/AhmadV99/Speed-Hub-X/main/Speed%20Hub%20X.lua"))()
        elseif Option == "Redz Hub" then
            loadstring(game:HttpGet("https://raw.githubusercontent.com/realredz/BloxFruits/refs/heads/main/Source.lua"))()
        end
    end,
})


Rayfield:LoadConfiguration()
