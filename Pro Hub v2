local function SafeGet(url)
    local success, response = pcall(function()
        return game:HttpGet(url)
    end)
    if success then
        return response
    else
        warn("❌ Failed to GET:", url, "| Error:", response)
        return nil
    end
end

local RayfieldSource = SafeGet("https://raw.githubusercontent.com/SiriusSoftwareLtd/Rayfield/main/source.lua")
if not RayfieldSource then
    error("Rayfield failed to load - check your connection or Rayfield's URL.")
end

local Rayfield = loadstring(RayfieldSource)()

local Window = Rayfield:CreateWindow({
    Name = "Pro Hub - v3",
    LoadingTitle = "Pro Hub",
    LoadingSubtitle = "by Mike",
    Theme = "Default",
    ConfigurationSaving = {
       Enabled = true,
       FileName = "ProHubConfig"
    },
})

-- Player Tab
local PlayerTab = Window:CreateTab("Player", 4483362458)

PlayerTab:CreateSlider({
    Name = "WalkSpeed",
    Range = {0, 300},
    Increment = 1,
    Suffix = "Speed",
    CurrentValue = 16,
    Flag = "WalkSpeedSlider",
    Callback = function(Value)
        game.Players.LocalPlayer.Character.Humanoid.WalkSpeed = Value
    end,
})

PlayerTab:CreateSlider({
    Name = "JumpPower",
    Range = {50, 500},
    Increment = 10,
    Suffix = "JumpPower",
    CurrentValue = 50,
    Flag = "JumpPowerSlider",
    Callback = function(Value)
        game.Players.LocalPlayer.Character.Humanoid.JumpPower = Value
    end,
})

PlayerTab:CreateToggle({
    Name = "Infinite Jump",
    CurrentValue = false,
    Flag = "InfiniteJumpToggle",
    Callback = function(Enabled)
        if Enabled then
            _G.InfiniteJump = game:GetService("UserInputService").JumpRequest:Connect(function()
                game.Players.LocalPlayer.Character:FindFirstChildOfClass("Humanoid"):ChangeState("Jumping")
            end)
        else
            if _G.InfiniteJump then
                _G.InfiniteJump:Disconnect()
                _G.InfiniteJump = nil
            end
        end
    end,
})

PlayerTab:CreateToggle({
    Name = "No Clip",
    CurrentValue = false,
    Flag = "NoClipToggle",
    Callback = function(Enabled)
        local RunService = game:GetService('RunService')
        local function noclip()
            if game.Players.LocalPlayer.Character then
                for _, v in pairs(game.Players.LocalPlayer.Character:GetDescendants()) do
                    if v:IsA('BasePart') and v.CanCollide then
                        v.CanCollide = false
                    end
                end
            end
        end

        if Enabled then
            _G.NoClipConnection = RunService.Stepped:Connect(noclip)
        else
            if _G.NoClipConnection then
                _G.NoClipConnection:Disconnect()
                _G.NoClipConnection = nil
            end
        end
    end,
})

-- Teleport Tab
local TeleportTab = Window:CreateTab("Teleports", 4483362458)

local Locations = {
    {"Spawn", game.Players.LocalPlayer.Character.HumanoidRootPart.Position},
    {"Sky High", Vector3.new(0, 500, 0)},
    {"Void", Vector3.new(0, -500, 0)}
}

for _, location in ipairs(Locations) do
    TeleportTab:CreateButton({
        Name = location[1],
        Callback = function()
            game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(location[2])
        end,
    })
end

-- ESP Tab
local ESPTab = Window:CreateTab("ESP", 4483362458)

local function ApplyESP(player)
    if player == game.Players.LocalPlayer then return end
    local highlight = Instance.new("Highlight", player.Character or player.CharacterAdded:Wait())
    highlight.Adornee = player.Character
    highlight.FillColor = Color3.fromRGB(255, 0, 0)
    highlight.FillTransparency = 0.5
    player.CharacterAdded:Connect(function(char)
        highlight.Adornee = char
    end)
end

ESPTab:CreateToggle({
    Name = "Player ESP",
    CurrentValue = false,
    Flag = "PlayerESP",
    Callback = function(Enabled)
        if Enabled then
            for _, player in ipairs(game.Players:GetPlayers()) do
                ApplyESP(player)
            end
            game.Players.PlayerAdded:Connect(ApplyESP)
        else
            for _, player in ipairs(game.Players:GetPlayers()) do
                if player.Character then
                    for _, v in ipairs(player.Character:GetChildren()) do
                        if v:IsA("Highlight") then
                            v:Destroy()
                        end
                    end
                end
            end
        end
    end,
})

-- Autofarm Tab
local AutoFarmTab = Window:CreateTab("AutoFarm", 4483362458)

AutoFarmTab:CreateToggle({
    Name = "Auto Collect Coins",
    CurrentValue = false,
    Flag = "AutoFarm",
    Callback = function(Enabled)
        if Enabled then
            _G.Farming = true
            while _G.Farming do
                for _, v in ipairs(workspace:GetDescendants()) do
                    if v.Name:lower():find("coin") and v:IsA("Part") then
                        game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = v.CFrame
                        wait(0.1)
                    end
                end
                wait(0.5)
            end
        else
            _G.Farming = false
        end
    end,
})

-- Fun Tab
local FunTab = Window:CreateTab("Fun", 4483362458)

FunTab:CreateButton({
    Name = "Fling Yourself",
    Callback = function()
        local hrp = game.Players.LocalPlayer.Character.HumanoidRootPart
        hrp.Velocity = Vector3.new(math.random(-500, 500), math.random(500, 1000), math.random(-500, 500))
    end,
})

FunTab:CreateButton({
    Name = "Rainbow Character",
    Callback = function()
        spawn(function()
            while true do
                for _, part in ipairs(game.Players.LocalPlayer.Character:GetChildren()) do
                    if part:IsA("BasePart") then
                        part.Color = Color3.fromHSV(tick()%5/5, 1, 1)
                    end
                end
                wait(0.1)
            end
        end)
    end,
})

FunTab:CreateButton({
    Name = "Explode Yourself",
    Callback = function()
        local explosion = Instance.new("Explosion")
        explosion.Position = game.Players.LocalPlayer.Character.HumanoidRootPart.Position
        explosion.Parent = workspace
        game.Players.LocalPlayer.Character:BreakJoints()
    end,
})

FunTab:CreateButton({
    Name = "Spin Like Crazy",
    Callback = function()
        local hrp = game.Players.LocalPlayer.Character.HumanoidRootPart
        spawn(function()
            while true do
                hrp.CFrame = hrp.CFrame * CFrame.Angles(0, math.rad(30), 0)
                wait(0.05)
            end
        end)
    end,
})

FunTab:CreateButton({
    Name = "Tiny Character",
    Callback = function()
        for _, part in ipairs(game.Players.LocalPlayer.Character:GetDescendants()) do
            if part:IsA("BasePart") then
                part.Size = part.Size * 0.3
            end
        end
    end,
})

FunTab:CreateButton({
    Name = "Giant Character",
    Callback = function()
        for _, part in ipairs(game.Players.LocalPlayer.Character:GetDescendants()) do
            if part:IsA("BasePart") then
                part.Size = part.Size * 3
            end
        end
    end,
})

FunTab:CreateButton({
    Name = "Teleport to Random Player",
    Callback = function()
        local players = game.Players:GetPlayers()
        if #players > 1 then
            local target = players[math.random(1, #players)]
            if target ~= game.Players.LocalPlayer and target.Character and target.Character:FindFirstChild("HumanoidRootPart") then
                game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = target.Character.HumanoidRootPart.CFrame
            end
        else
            Rayfield:Notify({Title = "Oops!", Content = "No other players found to teleport to."})
        end
    end,
})

FunTab:CreateButton({
    Name = "Gravity Madness",
    Callback = function()
        game.Workspace.Gravity = math.random(1, 200)
        Rayfield:Notify({Title = "Gravity Set!", Content = "New Gravity: " .. game.Workspace.Gravity})
    end,
})

FunTab:CreateButton({
    Name = "Fly (Simple)",
    Callback = function()
        local player = game.Players.LocalPlayer
        local character = player.Character or player.CharacterAdded:Wait()
        local humanoidRootPart = character:WaitForChild("HumanoidRootPart")

        local flying = true

        local bodyVelocity = Instance.new("BodyVelocity", humanoidRootPart)
        bodyVelocity.Velocity = Vector3.new(0, 50, 0)
        bodyVelocity.MaxForce = Vector3.new(4000, 4000, 4000)

        Rayfield:Notify({Title = "Flying!", Content = "Press 'E' to stop flying."})

        game:GetService("UserInputService").InputBegan:Connect(function(input)
            if input.KeyCode == Enum.KeyCode.E then
                flying = false
                bodyVelocity:Destroy()
            end
        end)
    end,
})

FunTab:CreateButton({
    Name = "Fake Lag (Lag Switch)",
    Callback = function()
        local RunService = game:GetService("RunService")

        Rayfield:Notify({Title = "Fake Lag", Content = "Press 'L' to toggle lag."})

        local lagging = false

        game:GetService("UserInputService").InputBegan:Connect(function(input)
            if input.KeyCode == Enum.KeyCode.L then
                lagging = not lagging
                if lagging then
                    RunService:Set3dRenderingEnabled(false)
                    Rayfield:Notify({Title = "Lag On", Content = "Rendering Disabled."})
                else
                    RunService:Set3dRenderingEnabled(true)
                    Rayfield:Notify({Title = "Lag Off", Content = "Rendering Enabled."})
                end
            end
        end)
    end,
})


Rayfield:LoadConfiguration()
